#include <stdio.h>

void topo_sort(int n, int indegree[10], int a[10][10])
{
    int v, u, i, k, top, t[10], s[10];
    top = -1; 
    k = 0;
    for (i = 0; i < n; i++)
    {
        if (indegree[i] == 0)
            s[++top] = i;
    }

    while (top != -1)
    {
        u = s[top--];  
        t[k++] = u;
        for (v = 0; v < n; v++)
        {
            if (a[u][v] == 1)
            {
                indegree[v]--;
                if (indegree[v] == 0)
                    s[++top] = v;  
            }
        }
    }
    if (k != n)
    {
        printf("Graph contains a cycle. Topological sorting not possible.\n");
        return;
    }

    printf("Topological sequence: ");
    for (i = 0; i < n; i++)
        printf("%d ", t[i]);
    printf("\n");
}

int main()
{
    int i, j, n, indegree[10], a[10][10];
    printf("Enter the number of vertices:\n");
    scanf("%d", &n);

    for (i = 0; i < n; i++)
        indegree[i] = 0;

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
        {
            scanf("%d", &a[i][j]);
            if (a[i][j] == 1)
                indegree[j]++;
        }

    topo_sort(n, indegree, a);
    return 0;
}
