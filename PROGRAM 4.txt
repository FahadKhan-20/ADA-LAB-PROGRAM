#include <stdio.h>
#define INF 9999

void dijkstra(int cost[10][10], int n, int sv, int dist[10]) {
    int visited[10], min, u = -1, i, j;

    for (i = 1; i <= n; i++) {
        dist[i] = cost[sv][i];
        visited[i] = 0;
    }

    visited[sv] = 1;

    for (i = 1; i <= n - 1; i++) {
        min = INF;
        for (j = 1; j <= n; j++) {
            if (!visited[j] && dist[j] < min) {
                min = dist[j];
                u = j;
            }
        }

        if (u == -1) break;  // no reachable unvisited node
        visited[u] = 1;

        for (j = 1; j <= n; j++) {
            if (!visited[j] && (dist[u] + cost[u][j] < dist[j])) {
                dist[j] = dist[u] + cost[u][j];
            }
        }
    }
}

int main() {
    int cost[10][10], dist[10], n, sv;
    int i, j;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    printf("Enter the cost matrix (999 for no edge):\n");
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    printf("Enter the source vertex: ");
    scanf("%d", &sv);

    dijkstra(cost, n, sv, dist);

    printf("Shortest path from vertex %d:\n", sv);
    for (j = 1; j <= n; j++) {
        if (j != sv) {
            printf("%d -> %d = %d\n", sv, j, dist[j]);
        }
    }

    return 0;
}
