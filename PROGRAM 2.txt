#include <stdio.h>
#define INFINITY 999999

int prim(int cost[10][10], int source, int n)
{
    int i, j, sum = 0, visited[10], cmp[10], vertex[10];
    int min, u, v;

    for (i = 1; i <= n; i++)
    {
        vertex[i] = source;
        visited[i] = 0;
        cmp[i] = cost[source][i];
    }
    visited[source] = 1;

    for (i = 1; i <= n - 1; i++)
    {
        min = INFINITY;
        for (j = 1; j <= n; j++)
        {
            if (!visited[j] && cmp[j] < min)
            {
                min = cmp[j];
                u = j;
            }
        }

        visited[u] = 1;
        sum += cmp[u];
        printf("Edge selected: %d -> %d with cost %d, Current MST cost: %d\n", vertex[u], u, cmp[u], sum);

        for (v = 1; v <= n; v++)
        {
            if (!visited[v] && cost[u][v] < cmp[v])
            {
                cmp[v] = cost[u][v];
                vertex[v] = u;
            }
        }
    }
    return sum;
}

int main()
{
    int a[10][10], n, i, j, totalCost, source;

    printf("Enter the number of vertices:\n");
    scanf("%d", &n);

    printf("Enter the cost matrix (use %d for no edge):\n", INFINITY);
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= n; j++)
        {
            scanf("%d", &a[i][j]);
        }
    }

    printf("Enter the source vertex (1 to %d):\n", n);
    scanf("%d", &source);

    totalCost = prim(a, source, n);
    printf("\nTotal cost of Minimum Spanning Tree: %d\n", totalCost);

    return 0;
}
