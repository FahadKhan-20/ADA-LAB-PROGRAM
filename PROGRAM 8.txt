#include <stdio.h>
#define MAX 10

int s[MAX], x[MAX];
int d, n;

void sumofsub(int p, int k, int r)
{
    int i;
    x[k] = 1;  

    if (p + s[k] == d)  
    {
        for (i = 1; i <= k; i++)
            if (x[i] == 1)
                printf("%d ", s[i]);
        printf("\n");
    }
    else if (k + 1 <= n && p + s[k] + s[k + 1] <= d) 
    {
        sumofsub(p + s[k], k + 1, r - s[k]);
    }

    if ((p + r - s[k] >= d) && (k + 1 <= n) && (p + s[k + 1] <= d))
    {
        x[k] = 0; 
        sumofsub(p, k + 1, r - s[k]);
    }
}

int main()
{
    int i, sum = 0;

    printf("Enter the number of elements in set (max %d):\n", MAX - 1);
    scanf("%d", &n);

    printf("Enter the set elements in increasing order:\n");
    for (i = 1; i <= n; i++)
    {
        scanf("%d", &s[i]);
        sum += s[i];
    }

    printf("Enter the target subset sum:\n");
    scanf("%d", &d);

    if (sum < d || s[1] > d)
    {
        printf("No subset exists\n");
    }
    else
    {
        sumofsub(0, 1, sum);
    }

    return 0;
}
